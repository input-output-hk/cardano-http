version: "3.5"

services:
  postgres:
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: on-failure

  cardano-node:
    image: inputoutput/cardano-node:latest
    environment:
      - NETWORK=${NETWORK}
    volumes:
      - node-db:/data/db
      - node-ipc:/ipc

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:latest
    environment:
      - NETWORK=${NETWORK}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - cardano-node
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - node-ipc:/node-ipc
    restart: on-failure

  cardano-explorer-api:
    image: inputoutput/cardano-explorer-api:latest
    depends_on:
      - postgres
      - cardano-db-sync
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    ports:
      - 8100:8100
    restart: on-failure

  cardano-submit-api:
    image: inputoutput/cardano-submit-api:latest
    environment:
      - NETWORK=${NETWORK}
    depends_on:
      - cardano-node
    volumes:
      - node-ipc:/node-ipc
    ports:
      - 8101:8101
    restart: on-failure

secrets:
  postgres_db:
    file: ./config/postgres_db
  postgres_password:
    file: ./config/postgres_password
  postgres_user:
    file: ./config/postgres_user

volumes:
  postgres:
  node-db:
  node-ipc:
